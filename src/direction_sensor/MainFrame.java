
package direction_sensor;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.io.File;
import static java.lang.String.valueOf;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.DebugGraphics;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

public class MainFrame extends javax.swing.JFrame {

    public static boolean status = true;
    public static boolean validate = false;
    public static int barrierCode = 0;
    public static String text = "";
    public static ArrayList<Point> listIssuePoint = new ArrayList<>();
    public MainFrame() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        checkBtn.setEnabled(false);
        addBtn.setEnabled(false);
    }

    public void generate() {
        int height, width, numberOfSensor, sensorDiameter;
        try {
            height = Integer.parseInt(heightValue.getText());
            width = Integer.parseInt(widthValue.getText());
            numberOfSensor = Integer.parseInt(this.numberOfSensor.getText());
            sensorDiameter = Integer.parseInt(this.sensorDiameter.getText());
        } catch (Exception e) {
            validate = false;
            return;
        }
        if (height < 50 || height > 300 || width < 300 || width > 680) {
            sensorInf.height = height;
            sensorInf.width = width;
        }
        if (height < 50 || height > 300 || width < 300 || width > 680
                || numberOfSensor < 5 || numberOfSensor > 25
                || sensorDiameter < 50 || sensorDiameter > 200) {
            validate = false;
            return;
        }

        sensorInf.height = height;
        sensorInf.width = width;
        sensorInf.numberOfSensor = numberOfSensor;
        sensorInf.diameter = sensorDiameter;
        Direction_Sensor.listSensor.removeAll(Direction_Sensor.listSensor);
        sufa.setVisible(false);
        sufa.setVisible(true);
        text = "";
        text += "Area: " + sensorInf.width + ":" + sensorInf.height + "\n";
        text += "Number of sensor: " + sensorInf.numberOfSensor + "\n";
        sensorInfo.setText(text);
        sensorInfo.setText(text);
        validate = true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        heightValue = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        widthValue = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        Customize = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        numberOfSensor = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        sensorDiameter = new javax.swing.JTextField();
        sufa = new Surface();
        jScrollPane1 = new javax.swing.JScrollPane();
        sensorInfo = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        checkBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        statusMessage = new javax.swing.JLabel();
        costMessage = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel9 = new StatusBarrier();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(51, 153, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Wireless directional sensor network");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 734, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 102, 255), 2, true), "Menu", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.TOP));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 102, 255), 2, true), "Height - (100 - 500)", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));
        jPanel4.setPreferredSize(new java.awt.Dimension(185, 70));

        heightValue.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        heightValue.setBorder(null);
        heightValue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                heightValueKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(heightValue)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(heightValue, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 102, 255), 2, true), "Width - (400 - 680)", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));

        widthValue.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        widthValue.setBorder(null);
        widthValue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                widthValueKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(widthValue)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(widthValue, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton1.setBackground(new java.awt.Color(204, 255, 255));
        jButton1.setText("Generate sensor");
        jButton1.setBorder(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Customize.setBackground(new java.awt.Color(204, 255, 255));
        Customize.setText("Customize generation");
        Customize.setBorder(null);
        Customize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustomizeActionPerformed(evt);
            }
        });

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 102, 255), 2, true), "Number of sensor - (5 - 25)", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));

        numberOfSensor.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        numberOfSensor.setBorder(null);
        numberOfSensor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                numberOfSensorKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(numberOfSensor)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(numberOfSensor, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 102, 255), 2, true), "Sensor's diameter - (50 - 200)", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));

        sensorDiameter.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        sensorDiameter.setBorder(null);
        sensorDiameter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sensorDiameterKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sensorDiameter)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(sensorDiameter, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Customize, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Customize, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        sufa.setBackground(new java.awt.Color(255, 255, 255));

        sensorInfo.setColumns(20);
        sensorInfo.setRows(5);
        sensorInfo.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 102, 255)), "Sensor INF", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));
        jScrollPane1.setViewportView(sensorInfo);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        checkBtn.setBackground(new java.awt.Color(204, 255, 255));
        checkBtn.setText("Check barrier");
        checkBtn.setBorder(null);
        checkBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBtnActionPerformed(evt);
            }
        });

        addBtn.setBackground(new java.awt.Color(204, 255, 255));
        addBtn.setText("Add new sensor");
        addBtn.setBorder(null);
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        jLabel2.setText("Barrier Status");

        statusMessage.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        statusMessage.setText("No data avaiable");

        costMessage.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        costMessage.setText("Sensor const");

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8-cost-50.png"))); // NOI18N

        jLabel7.setText("Sensor cost");

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(checkBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(statusMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(costMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(statusMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(costMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout sufaLayout = new javax.swing.GroupLayout(sufa);
        sufa.setLayout(sufaLayout);
        sufaLayout.setHorizontalGroup(
            sufaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sufaLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        sufaLayout.setVerticalGroup(
            sufaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sufaLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(sufaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sufa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sufa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void heightValueKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_heightValueKeyReleased
        generate();
    }//GEN-LAST:event_heightValueKeyReleased

    private void widthValueKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_widthValueKeyReleased
        generate();
    }//GEN-LAST:event_widthValueKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        status = true;
        generate();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void numberOfSensorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numberOfSensorKeyReleased
        generate();
    }//GEN-LAST:event_numberOfSensorKeyReleased

    private void sensorDiameterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sensorDiameterKeyReleased
        generate();
    }//GEN-LAST:event_sensorDiameterKeyReleased

    private void CustomizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustomizeActionPerformed
        if(!validate) return;
        checkBtn.setEnabled(true);
        addBtn.setEnabled(true);
    }//GEN-LAST:event_CustomizeActionPerformed

    private void checkBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBtnActionPerformed
        autoCheck();
    }//GEN-LAST:event_checkBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        status = false;
        if(listIssuePoint.size() < 1){ 
            JOptionPane.showMessageDialog(rootPane, "No issue exist");
            return;
        }
        Random ran = new Random();
        int R = ran.nextInt(255);
        int G = ran.nextInt(255);
        int B = ran.nextInt(255);
        SColor color = new SColor(R, G, B);
        int direction = ran.nextInt(50);
        Point center = new Point(listIssuePoint.get(0).getX()-sensorInf.diameter/2, sensorInf.diameter/2);
        Direction_Sensor newSensor = new Direction_Sensor(color, center, sensorInf.diameter, 
                sensorInf.diameter, direction, 100);
        Direction_Sensor.listSensor.add(newSensor);
        listIssuePoint.remove(0);
        sensorInf.numberOfSensor++;
        sufa.setVisible(false);
        sufa.setVisible(true);
        autoCheck();
    }//GEN-LAST:event_addBtnActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    //Draw sensor
    class Surface extends JPanel {

        private void doDrawing(Graphics g) {

            Graphics2D g2d = (Graphics2D) g;

            g2d.setPaint(new Color(190, 190, 190));

            RenderingHints rh = new RenderingHints(
                    RenderingHints.KEY_ANTIALIASING,
                    RenderingHints.VALUE_ANTIALIAS_ON);

            rh.put(RenderingHints.KEY_RENDERING,
                    RenderingHints.VALUE_RENDER_QUALITY);

            g2d.setRenderingHints(rh);
            g2d.drawRect(20, 20, sensorInf.width, sensorInf.height);
            if (status) {
                for (int i = 0; i < sensorInf.numberOfSensor; i++) {
                    Random ran = new Random();
                    int R = ran.nextInt(255);
                    int G = ran.nextInt(255);
                    int B = ran.nextInt(255);
                    SColor color = new SColor(R, G, B);
                    g2d.setPaint(new Color(R, G, B));

                    int x = ran.nextInt(sensorInf.width - sensorInf.diameter/2);
                    int y = ran.nextInt(sensorInf.height - sensorInf.diameter/2);
                    int z = ran.nextInt(360);
                    int rad = ran.nextInt(20) + 90;
                    Point p = new Point(x, y);
                    Direction_Sensor sensor = new Direction_Sensor(color, p, sensorInf.diameter, sensorInf.diameter, z, rad);
                    sensor.drawSensor(g2d);
                    Direction_Sensor.listSensor.add(sensor);
                }
            } else {
                for(int i=0;i<Direction_Sensor.listSensor.size();i++){
                    g2d.setPaint(new Color(Direction_Sensor.listSensor.get(i).getColor().getR(),
                            Direction_Sensor.listSensor.get(i).getColor().getG(),
                            Direction_Sensor.listSensor.get(i).getColor().getB()));
                    Direction_Sensor.listSensor.get(i).drawSensor(g2d);
                }
                g2d.setPaint(new Color(245, 44, 29));
                for(int i=0;i<Direction_Sensor.listSensor.size();i++){
                    g2d.setPaint(new Color(Direction_Sensor.listSensor.get(i).getColor().getR(),
                            Direction_Sensor.listSensor.get(i).getColor().getG(),
                            Direction_Sensor.listSensor.get(i).getColor().getB()));
                    g2d.drawLine(Direction_Sensor.listSensor.get(i).getCenter().getX(),
                            Direction_Sensor.listSensor.get(i).getCenter().getY() + 
                            Direction_Sensor.listSensor.get(i).getDiameter1()/2,
                            Direction_Sensor.listSensor.get(i).getCenter().getX() + 
                            Direction_Sensor.listSensor.get(i).getDiameter1(), 
                            Direction_Sensor.listSensor.get(i).getCenter().getY() +
                            Direction_Sensor.listSensor.get(i).getDiameter1()/2);
                }
                for (int i=0;i<listIssuePoint.size();i++){
                    g2d.setPaint(new Color(245, 44, 29));
                    g2d.drawLine(listIssuePoint.get(i).getX(), 20, listIssuePoint.get(i).getX(), 20 + sensorInf.height);
                }
            }
            
        }

        @Override
        public void paintComponent(Graphics g) {
            super.paintComponent(g);
            doDrawing(g);
        }
    }
    //Draw status icon
    class StatusBarrier extends JPanel {

        private void doDrawing(Graphics g) {

            Graphics2D g2d = (Graphics2D) g;

            g2d.setPaint(new Color(190, 190, 190));

            RenderingHints rh = new RenderingHints(
                    RenderingHints.KEY_ANTIALIASING,
                    RenderingHints.VALUE_ANTIALIAS_ON);

            rh.put(RenderingHints.KEY_RENDERING,
                    RenderingHints.VALUE_RENDER_QUALITY);

            g2d.setRenderingHints(rh);
            
            if(barrierCode == 0){
                g2d.setPaint(new Color(198, 198, 198));
                g2d.setStroke(new BasicStroke(5));
                g2d.drawLine(2, 50, 2, 40);
                g2d.drawLine(10, 50, 10, 30);
                g2d.drawLine(20, 50, 20, 20);
                g2d.drawLine(30, 50, 30, 10);
            }
            else if (barrierCode == 1){
                g2d.setPaint(new Color(255, 3, 0));
                g2d.setStroke(new BasicStroke(5));
                g2d.drawLine(-10, 50, -10, 48);
                g2d.drawLine(2, 50, 2, 40);
                g2d.setPaint(new Color(198, 198, 198));
                g2d.drawLine(10, 50, 10, 30);
                g2d.drawLine(20, 50, 20, 20);
                g2d.drawLine(30, 50, 30, 10);
            }
            else if (barrierCode == 2){
                g2d.setPaint(new Color(255, 154, 92));
                g2d.setStroke(new BasicStroke(5));
                g2d.drawLine(2, 50, 2, 40);
                g2d.drawLine(10, 50, 10, 30);
                g2d.setPaint(new Color(198, 198, 198));
                g2d.drawLine(20, 50, 20, 20);
                g2d.drawLine(30, 50, 30, 10);
            }
            else if (barrierCode ==3) {
                g2d.setPaint(new Color(217, 255, 92));
                g2d.setStroke(new BasicStroke(5));
                g2d.drawLine(2, 50, 2, 40);
                g2d.drawLine(10, 50, 10, 30);
                g2d.drawLine(20, 50, 20, 20);
                g2d.drawLine(30, 50, 30, 10);
                g2d.setPaint(new Color(198, 198, 198));
                g2d.drawLine(30, 50, 30, 10);
            }
            else {
                g2d.setPaint(new Color(47, 255, 28));
                g2d.setStroke(new BasicStroke(5));
                g2d.drawLine(2, 50, 2, 40);
                g2d.drawLine(10, 50, 10, 30);
                g2d.drawLine(20, 50, 20, 20);
                g2d.drawLine(30, 50, 30, 10);
            }
        }

        @Override
        public void paintComponent(Graphics g) {
            super.paintComponent(g);
            doDrawing(g);
        }
    }
    //Check barrier performance
    public int barrierChecking(){
        int numberOfIssue = 0;
        
        ArrayList<Direction_Sensor> list = new ArrayList<>();
        list = Direction_Sensor.listSensor;
        int x1,x2;
        listIssuePoint.removeAll(listIssuePoint);
        for(int i=20;i<sensorInf.width+20;i++){
            boolean check = false;
            for (int j = 0;j<list.size();j++){
                x1 = list.get(j).getCenter().getX();
                x2 = list.get(j).getCenter().getX() + list.get(j).getDiameter1();
                if(i>x1 && i<x2){
                    check = true;
                    System.out.println("Line i = " + i + " pass sensor " + j + "\n");
                    continue;
                }
            }
            if (!check){
                Point p = new Point(i, 0);
                listIssuePoint.add(p);
                System.out.println("Issue at: " + i + "\n");
                numberOfIssue++;
            }
        }
        return numberOfIssue;
    }
    public void autoCheck(){
        costMessage.setText(valueOf(sensorInf.numberOfSensor));
        jPanel9.setVisible(false);
        jPanel9.setVisible(true);
        int issue = barrierChecking();
        text += "number of issue: " + issue + "\n";
        barrierCode = issue < 10 ? 4 : issue < 25 ? 3 : issue < 40 ? 2 : 1;
        if(barrierCode == 1){
            statusMessage.setText("Very weak barrier");
        }
        else if (barrierCode == 2){
            statusMessage.setText("Weak barrier");
        }
        else if (barrierCode == 3){
            statusMessage.setText("Strong barrier");
        }
        else {
            statusMessage.setText("Very strong barrier");
        }
        
        sensorInfo.setText(text);
        status = false;
        sufa.setVisible(false);
        sufa.setVisible(true);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Customize;
    private javax.swing.JButton addBtn;
    private javax.swing.JButton checkBtn;
    private javax.swing.JLabel costMessage;
    private javax.swing.JTextField heightValue;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField numberOfSensor;
    private javax.swing.JTextField sensorDiameter;
    private javax.swing.JTextArea sensorInfo;
    private javax.swing.JLabel statusMessage;
    private javax.swing.JPanel sufa;
    private javax.swing.JTextField widthValue;
    // End of variables declaration//GEN-END:variables
}
